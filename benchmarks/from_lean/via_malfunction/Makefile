EXTRACTION_DIR = extraction

default:
	echo "No target specified, exiting."

$(EXTRACTION_DIR):
	mkdir -p $(EXTRACTION_DIR)

# The .ast file containing Î»box S-expressions is generated by elaborating the appropriate .lean file.
# Running `lake build` would not work as lake would do nothing on subsequent runs if the .lean has not changed.
$(EXTRACTION_DIR)/%.ast: %.lean | $(EXTRACTION_DIR)
	lake lean $<

$(EXTRACTION_DIR)/%.mlf: $(EXTRACTION_DIR)/%.ast
	lbox ocaml $< > /dev/null

# Copying this over so its place in the Git repo is outside of the extraction directory.
$(EXTRACTION_DIR)/%.mli: %.mli | $(EXTRACTION_DIR)
	cp $< $@

# Malfunction will generate an empty .cmi file if not given one, but that won't work for linking later.
$(EXTRACTION_DIR)/%.cmi: $(EXTRACTION_DIR)/%.mli
	ocamlopt.opt $<

$(EXTRACTION_DIR)/%.cmx: $(EXTRACTION_DIR)/%.mlf $(EXTRACTION_DIR)/%.cmi
	cd $(EXTRACTION_DIR) && malfunction cmx $*.mlf

# The shell magic capitalizes the first letter of the test name to make a module name.
$(EXTRACTION_DIR)/run_%.ml:
	echo "let _ = $(shell echo $* | sed 's/^./\U&/').$* ()" > $@

$(EXTRACTION_DIR)/%.native: $(EXTRACTION_DIR)/run_%.ml $(EXTRACTION_DIR)/%.cmx $(EXTRACTION_DIR)/%.cmi
	ocamlopt.opt -I $(EXTRACTION_DIR) $(EXTRACTION_DIR)/$*.cmx $< -o $@

clean:
	rm -rf $(EXTRACTION_DIR)

.PHONY: all clean

# Don't delete intermediate files
.PRECIOUS: $(EXTRACTION_DIR)/%.ast $(EXTRACTION_DIR)/%.cmi $(EXTRACTION_DIR)/%.mlf $(EXTRACTION_DIR)/%.cmx $(EXTRACTION_DIR)/run_%.ml $(EXTRACTION_DIR)/%.mli
